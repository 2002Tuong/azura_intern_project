apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.firebase.crashlytics'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion "30.0.3"

    buildFeatures {
        buildConfig = true
        dataBinding = true
        viewBinding = true
    }

    defaultConfig {
        applicationId "com.wallpaper.parallax"
        minSdkVersion 24
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 5
        versionName "1.1.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        release {
            keyAlias keystoreProperties['keyAlias_r']
            keyPassword keystoreProperties['keyPassword_r']
            storeFile file(keystoreProperties['storeFile_r'])
            storePassword keystoreProperties['storePassword_r']
        }
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    buildTypes {
        release {
            debuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    // work-runtime-ktx 2.1.0 and above now requires Java 8
    kotlinOptions {
        jvmTarget = "1.8"
    }
    namespace 'com.parallax.hdvideo.wallpapers'
}

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation project(':inappbilling')
    implementation project(':parallax')

    //Support for Java 8
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

    // jetbrains
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //Core
    implementation 'androidx.core:core-ktx:1.12.0'

    // LiveData, ViewModel and Coroutines
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
//    implementation "androidx.activity:activity-ktx:$activity"
    implementation "androidx.fragment:fragment-ktx:1.6.2"

    //work
    implementation "androidx.work:work-runtime-ktx:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"

    // Support design
    implementation "androidx.appcompat:appcompat:$android_support_version"
    implementation "com.google.android.material:material:$material_deisign_version"
    implementation 'com.baoyz.pullrefreshlayout:library:1.2.0'

    // Database
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.work:work-rxjava2:2.8.1'
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    implementation "androidx.room:room-ktx:$room_version" //  // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-rxjava2:$room_version" // optional - RxJava support for Room
    implementation "androidx.room:room-guava:$room_version" //  // optional - Guava support for Room, including Optional and ListenableFuture
    testImplementation "androidx.room:room-testing:$room_version" //  Test helpers

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    // hilt 2
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    implementation "androidx.hilt:hilt-work:1.1.0"
    kapt "androidx.hilt:hilt-compiler:$hilt_jetpack_version"
    kapt "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.5.0"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    // Json
//    implementation "com.google.code.gson:gson:$gson_version"

    // Image
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'com.alexvasilkov:gesture-views:2.6.0'
//    implementation 'jp.wasabeef:glide-transformations:4.2.0'

    //Exoplayer
    implementation "com.google.android.exoplayer:exoplayer:$exoplayer"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayer"

    //firebase
    implementation platform('com.google.firebase:firebase-bom:32.6.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-messaging-directboot:23.3.1'

    //ads
    implementation 'com.google.android.gms:play-services-ads:22.5.0'
    //FAN Mediation
    //FAN Mediation
    implementation 'com.google.ads.mediation:applovin:11.11.3.0'
    implementation 'com.google.ads.mediation:ironsource:7.5.2.0'
    implementation 'com.google.ads.mediation:fyber:8.2.4.0'
    implementation 'com.google.ads.mediation:vungle:7.0.0.1'
    implementation 'com.google.ads.mediation:facebook:6.16.0.0'
    implementation 'com.google.ads.mediation:mintegral:16.5.41.0'
    implementation 'com.facebook.android:facebook-android-sdk:16.0.0'

    implementation 'com.github.VioTechDev:VioAds:0.0.5'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    implementation files('libs/tpMonitoring-wall.1.3.3.2.aar')
    implementation "cz.msebera.android:httpclient:4.5.8"

    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    //Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    //Test Hilt
//    kaptAndroidTest "androidx.hilt:hilt-compiler:$hilt_jetpack_version"
//    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
//    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
//    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    // View database and sharedPreference
    // comment line terminal: adb forward tcp:8080 tcp:8080
    // open: http://localhost:8080
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    //lottie animation
    implementation "com.airbnb.android:lottie:$lottieVersion"
    // flex layout
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
}

task switchToRelease(type: Copy) {
    description = 'Switches to RELEASE google-services.json'
    from "src/release"
    include "google-services.json"
    into "."
}

task switchToDebug(type: Copy) {
    description = 'Switches to DEBUG google-services.json'
    from "src/debug"
    include "google-services.json"
    into "."
}